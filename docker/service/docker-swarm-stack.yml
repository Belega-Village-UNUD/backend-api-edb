version: "3.4"
services:
  app:
    image: ghcr.io/belega-village-unud/backend-api-edb:staging
    environment:
      - NODE_ENV=${NODE_ENV}
      - DEV_DB_USERNAME=${DEV_DB_USERNAME}
      - DEV_DB_PASSWORD=${DEV_DB_PASSWORD}
      - DEV_DB_DB=${DEV_DB_NAME}
      - DEV_DB_NAME=${DEV_DB_NAME}
      - DEV_DB_HOST=${DEV_DB_HOST}
      - DEV_DB_PORT=${DEV_DB_PORT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_EXPIRES=${JWT_EXPIRES}
      - JWT_RESET_PASSWORD_KEY=${JWT_RESET_PASSWORD_KEY}
      - JWT_RESET_EXPIRES=${JWT_RESET_EXPIRES}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - GOOGLE_REFRESH_TOKEN=${GOOGLE_REFRESH_TOKEN}
      - GOOGLE_EMAIL=${GOOGLE_EMAIL}
      - WIF_PROVIDER=${WIF_PROVIDER}
      - CLOUD_RUN_SA=${CLOUD_RUN_SA}
      - IMAGEKIT_PUBLIC_KEY=${IMAGEKIT_PUBLIC_KEY}
      - IMAGEKIT_PRIVATE_KEY=${IMAGEKIT_PRIVATE_KEY}
      - IMAGEKIT_URL_ENDPOINT=${IMAGEKIT_URL_ENDPOINT}
      - PROMETHEUS_PORT=${PROMETHEUS_PORT}
      - ALERTMANAGER_PORT=${ALERTMANAGER_PORT}
      - TESTING_DOMAIN=${TESTING_DOMAIN}
      - DUCKDNS_TOKEN=${DUCKDNS_TOKEN}
      - MIDTRANS_MERCHANT_ID=${MIDTRANS_MERCHANT_ID}
      - MIDTRANS_CLIENT_KEY=${MIDTRANS_CLIENT_KEY}
      - MIDTRANS_SERVER_KEY=${MIDTRANS_SERVER_KEY}
      - DSN_SENTRY=${DSN_SENTRY}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PORT=${PORT}
    ports:
      - ${PORT}:3000
    networks:
      - service
      - db
      - web_server
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      - db
      - cache


  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${DEV_DB_USERNAME}
      - POSTGRES_PASSWORD=${DEV_DB_PASSWORD}
      - POSTGRES_DB=${DEV_DB_NAME}
      - POSTGRES_MODE=primary
    ports:
      - ${DEV_DB_PORT}:5432
    networks:
      - db
    deploy:
      placement:
        constraints:
          - node.role == manager
    volumes:
      - db-data:/var/lib/postgresql/data

  db_replica:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${REP_DEV_DB_USERNAME}
      - POSTGRES_PASSWORD=${REP_DEV_DB_PASSWORD}
      - POSTGRES_DB=${REP_DEV_DB_NAME}
      - POSTGRES_MODE=replica
    ports:
      - ${REP_DEV_DB_PORT}:5432
    networks:
      - db
    deploy:
      placement:
        constraints:
          - node.role == worker
    depends_on:
      - db
      - cache
    volumes:
      - db-data-replica:/var/lib/postgresql/data

  cache:
    image: redis:6.2-alpine
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - db
    ports:
      - ${REDIS_PORT}:6379
    depends_on:
      - db
    volumes:
      - cache-data:/data

  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    deploy:
      mode: global
    volumes:
      - ../../nginx/conf.d:/etc/nginx/conf.d
      - ../../nginx/dhparam:/etc/nginx/dhparam
      - ../../certbot/letsencrypt:/etc/letsencrypt
    labels:
      - "constraint:node==manager"
    depends_on:
      - app
    networks:
      - web_server


networks:
  service:
  db:
  web_server:

volumes:
  db-data:
    driver: local
  db-data-replica:
    driver: local
  cache-data:
    driver: local

