name: Deploy

on:
  push:
    branches: ["EDP-67-sast-on-container"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  INSTANCE_NAME: belega-village-unud
  ZONE: asia-southeast2-a

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }} github actions to run publish docker image to github packages
      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.CLOUD_RUN_SA }}
      - name: Docker configuration
        id: docker-config
        run: |-
          gcloud auth print-access-token \
            --impersonate-service-account ${{ secrets.CLOUD_RUN_SA }} | docker login \
            -u oauth2accesstoken \
            --password-stdin https://${{ secrets.REGION }}-docker.pkg.dev
      - name: Deploy App
        id: deploy
        run: |
          gcloud compute instances list
      #  uses: google-github-actions/deploy-cloudrun@v1
      #  with:
      #    service: ${{ secrets.SERVICE_NAME }}
      #    region: ${{ secrets.REGION }}
      #    image: ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
      #    env_vars: |
      #      NODE_ENV=${{ secrets.NODE_ENV }}
      #      STAGING_DB_USERNAME=${{ secrets.STAGING_DB_USERNAME }}
      #      STAGING_DB_NAME=${{ secrets.STAGING_DB_NAME }}
      #      STAGING_DB_PASSWORD=${{ secrets.STAGING_DB_PASSWORD }}
      #      STAGING_DB_HOST=${{ secrets.STAGING_DB_HOST }}
      #      STAGING_DB_PORT=${{ secrets.STAGING_DB_PORT }}
      #      JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
      #      JWT_EXPIRES=${{ secrets.JWT_EXPIRES }}
      #      JWT_OTP_KEY=${{ secrets.JWT_OTP_KEY }}
      #      JWT_OTP_EXPIRES=${{ secrets.JWT_OTP_EXPIRES }}
      #      GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
      #      GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
      #      GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }}
      #      GOOGLE_REFRESH_TOKEN=${{ secrets.GOOGLE_REFRESH_TOKEN }}
      #      GOOGLE_EMAIL=${{ secrets.GOOGLE_EMAIL }}
      #      BELEGA_ADMIN_EMAIL=${{ secrets.BELEGA_ADMIN_EMAIL }}
      #      BELEGA_ADMIN_PASSWORD=${{ secrets.BELEGA_ADMIN_PASSWORD }}
      #      IMAGEKIT_PUBLIC_KEY=${{ secrets.IMAGEKIT_PUBLIC_KEY }}
      #      IMAGEKIT_PRIVATE_KEY=${{ secrets.IMAGEKIT_PRIVATE_KEY }}
      #      IMAGEKIT_URL_ENDPOINT=${{ secrets.IMAGEKIT_URL_ENDPOINT }}
